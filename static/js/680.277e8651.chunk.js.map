{"version":3,"file":"static/js/680.277e8651.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","redux/ContactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nexport const Form = styled.form`\n    display: flex;\n    gap: 20px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 40px;\n`;\n\nexport const Input = styled(TextField)`\n    width: 260px;\n    \n    @media screen and (min-width: 481px) {\n        width: 320px;\n    }\n`;\n\nexport const TitleReg = styled.h1`\n    color: #4a4b47;\n    font-size: 20px;\n    font-weight: 700;\n    letter-spacing: '.3rem';\n    text-align: center;\n    margin-top: 30px;\n    @media screen and (min-width: 481px) {\n        font-size: 24px;\n        margin-top: 20px;\n    }\n`","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.query;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filterQuary) => {\n        if (!filterQuary) {\n            return contacts\n        }\n        const clearFilter = filterQuary.toLowerCase();\n        return contacts.filter(contact => contact.name.toLowerCase().includes(clearFilter));\n    }\n);","import styled from \"styled-components\";\nimport { Form as FormikForm, ErrorMessage as FormikError, Field } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    width: 400px;\n    padding: 10px;\n    border: 1px solid #0F6CFA;\n    border-radius: 10px;\n`;\n\nexport const FormField = styled.label`\n    display: flex;\n    flex-direction: column;\n    color: #757575;\n    font-weight: 500;\n    font-size: 20px;\n`;\nexport const ErrorMessage = styled(FormikError)`\n    font-size: 12px;\n    color: #F42E16;\n`\nexport const FormLabel = styled.span`\n  display: block;\n  margin-bottom: 20px;\n  color: #757575;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const InputContact = styled(Field)`\n    display: block;\n    margin-top: 15px;\n    padding: 10px;\n    width: 100%;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 15px;\n    width: 238px;\n    @media screen and (min-width: 481px) {\n        width: 298px;\n    }\n    :focus {\n        outline-color: #f50057;\n    }\n`\n\nexport const SubmitBtn = styled.button`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    justify-content: center;\n    padding: 5px;\n    margin: 0 auto;\n    width: 200px;\n    font-size: 15px;\n    font-weight: 500;\n    border-radius: 10px;\n    border: 1px solid #0F6CFA;\n    background-color: white;\n    :hover {\n        background-color: #16F420;\n    }\n`","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/ContactsOperations';\nimport { selectContacts } from 'redux/ContactsSelectors';\nimport * as Yup from 'yup';\nimport { FormField, Form, ErrorMessage, InputContact } from './ContactForm.styled';\nimport { Button } from '@mui/material';\n\nconst ContactShema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Name is too short!')\n    .max(16, 'Name is too long!')\n    .required('Name is required'),\n  number: Yup.string()\n    .min(3, 'Number is too short!')\n    .max(20, 'Number is too long!')\n    .required('Number is required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, actions) => {\n    const findName = values.name.toLowerCase();\n    if (contacts.find(({ name }) => name.toLowerCase() === findName)) {\n      alert(`${values.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={ContactShema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <FormField>\n          <span>Name</span>\n          <InputContact name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormField>\n        <FormField>\n          <span>Number</span>\n          <InputContact name=\"number\" type=\"tel\" format=\"(###) ###-##-##\"/>\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormField>\n        <Button variant=\"contained\" type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func,\n};","import styled from \"styled-components\";\n\nexport const FilterInput = styled.input`\n    display: block;\n    margin: 0 auto;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    padding: 10px;\n    width: 100%;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 15px;\n    width: 238px;\n    @media screen and (min-width: 481px) {\n        width: 298px;\n    }\n    :focus {\n        outline-color: #f50057;\n    }\n`;\n\nexport const TitleContact = styled.h2`\n    color: #4a4b47;\n    font-size: 16px;\n    font-weight: 600;\n    letter-spacing: '.3rem';\n    text-align: center;\n    margin-top: 30px;\n    @media screen and (min-width: 481px) {\n        font-size: 20px;\n    }\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"redux/FilterSlice\";\nimport { selectFilter } from \"redux/ContactsSelectors\";\nimport { FilterInput } from \"./Filter.styled\";\n\nexport const Filter = () => {\n    const filterQuery = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const onFilterChange = event => dispatch(setFilter(event.currentTarget.value));\n\n    return (\n        <div>\n            <label>\n                <FilterInput type=\"text\" placeholder=\"Find contact\"value={filterQuery} onChange={onFilterChange} />\n            </label>\n        </div>\n    )\n}","import { MutatingDots } from \"react-loader-spinner\";\n\nexport const Loader = () => {\n    return (\n    <MutatingDots \n        height=\"100\"\n        width=\"100\"\n        color=\"#4fa94d\"\n        secondaryColor= '#4fa94d'\n        radius='12.5'\n        ariaLabel=\"mutating-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n    />\n    )\n}","import PropTypes from 'prop-types';\nimport { IoMdTrash } from 'react-icons/io';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/ContactsOperations';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport { stringAvatar } from 'components/UserMenu/getAvatarColor';\nimport IconButton from '@mui/material/IconButton';\n\nexport const ContactItem = ({ contact: { id, name, number }, onDelete }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ListItemAvatar>\n        <Avatar {...stringAvatar(name.toString())} />\n      </ListItemAvatar>\n      <ListItemText primary={name} secondary={number} />\n      <IconButton\n        aria-label=\"delete\"\n        size=\"large\"\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        <IoMdTrash size=\"20\" />\n      </IconButton>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }),\n};\n","import styled from \"styled-components\";\nimport { List, ListItem } from \"@mui/material\";\n\nexport const ListStyled = styled(List)`\n    display: flex;\n    margin: 0 auto;\n    gap: 20px;\n    flex-direction: column;\n    background-color: rgba(220, 220, 220, 0.5);\n    border-radius: 4px;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n`;\n\nexport const ItemStyled = styled(ListItem)`\n    display: flex;\n`","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { ItemStyled, ListStyled } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/ContactsSelectors';\n\nexport const ContactList = () => {\n  \n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ListStyled>\n      {visibleContacts.map(contact => (\n        <ItemStyled key={contact.id}>\n          <ContactItem contact={contact} />\n        </ItemStyled>\n      ))}\n    </ListStyled>\n  );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/ContactsOperations';\nimport { selectIsLoading, selectError } from 'redux/ContactsSelectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { TitleReg } from 'components/RegisterForm/RegisterForm.styled';\nimport { TitleContact } from 'components/Filter/Filter.styled';\n\n\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n\n    return (\n        <HelmetProvider>\n            <Helmet>\n                <title>Contacts</title>\n            </Helmet>\n            <TitleReg>Please enter your details to add a contact</TitleReg>\n            <ContactForm />\n            <TitleContact>Contacts</TitleContact>\n            <Filter />\n            {isLoading ? <Loader />\n                : error ? <p>{error}</p>\n                    : <ContactList />}\n        </HelmetProvider>\n\n    )\n};\n\nexport default Contacts;"],"names":["Form","styled","Input","TextField","TitleReg","selectContacts","state","contacts","items","selectFilter","filter","query","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filterQuary","clearFilter","toLowerCase","contact","name","includes","FormikForm","FormField","ErrorMessage","FormikError","InputContact","Field","ContactShema","Yup","shape","min","max","required","number","ContactForm","useSelector","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","findName","find","alert","addContact","resetForm","component","type","format","Button","variant","FilterInput","TitleContact","Filter","filterQuery","placeholder","value","onChange","event","setFilter","currentTarget","Loader","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","ContactItem","id","onDelete","ListItemAvatar","Avatar","stringAvatar","toString","ListItemText","primary","secondary","IconButton","size","onClick","deleteContact","ListStyled","List","ItemStyled","ListItem","ContactList","visibleContacts","map","useEffect","fetchContacts"],"sourceRoot":""}