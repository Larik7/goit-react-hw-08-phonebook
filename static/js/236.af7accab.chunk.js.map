{"version":3,"file":"static/js/236.af7accab.chunk.js","mappings":"+PAGaA,EAAOC,EAAAA,GAAAA,KAAH,wKASJC,GAAQD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,2HAQLG,EAAWH,EAAAA,GAAAA,GAAH,+Q,uJCbRI,EAAe,WAC1B,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MACjB,GAA+CC,EAAAA,EAAAA,MAAvCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,WAchC,OACE,UAAC,KAAD,CAAMC,SAAUF,GAbD,SAACG,EAAMC,GACtBA,EAAEC,iBACFT,GACEU,EAAAA,EAAAA,IAAc,CACZC,KAAMJ,EAAKI,KACXC,MAAOL,EAAKK,MACZC,SAAUN,EAAKM,YAGnBR,EAAW,OAAQ,QAAS,WAC7B,IAGC,UACGR,GACC,SAAC,MAAD,QACEA,OAAK,EACLiB,UAAQ,EACRC,GAAG,iBACHC,MAAM,OACNC,KAAK,QACDd,EAAS,OAAQ,CAAEW,UAAU,EAAMI,UAAW,QAGpD,SAAC,MAAD,QACEJ,UAAQ,EACRC,GAAG,oBACHC,MAAM,OACNC,KAAK,QACDd,EAAS,OAAQ,CAAEW,UAAU,EAAMI,UAAW,OAIrDrB,GACC,SAAC,MAAD,QACEA,OAAK,EACLsB,MAAM,MACNL,UAAQ,EACRC,GAAG,iBACHC,MAAM,QACNC,KAAK,SACDd,EAAS,QAAS,CAAEW,UAAU,EAAMI,UAAW,QAGrD,SAAC,MAAD,QACEJ,UAAQ,EACRK,MAAM,MACNJ,GAAG,oBACHC,MAAM,QACNC,KAAK,SACDd,EAAS,QAAS,CAAEW,UAAU,EAAMI,UAAW,OAGtDrB,GACC,SAAC,MAAD,gBACEA,OAAK,EACLiB,UAAQ,EACRC,GAAG,iBACHC,MAAM,QACNC,KAAK,YACDd,EAAS,WAAY,CAAEW,UAAU,EAAMI,UAAW,MANxD,IAOEE,WAAW,oDAGb,SAAC,MAAD,QACEN,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNC,KAAK,YACDd,EAAS,WAAY,CAAEW,UAAU,EAAMI,UAAW,QAI1D,SAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYL,KAAK,SAAjC,wBAKL,E,UCvED,EAdiB,WACb,OACI,SAAC,KAAD,WACI,4BACI,SAAC,KAAD,WACI,+CAEJ,SAAC,KAAD,iDACA,SAACrB,EAAD,QAIf,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nexport const Form = styled.form`\n    display: flex;\n    gap: 20px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 40px;\n`;\n\nexport const Input = styled(TextField)`\n    width: 260px;\n    \n    @media screen and (min-width: 481px) {\n        width: 320px;\n    }\n`;\n\nexport const TitleReg = styled.h1`\n    color: #4a4b47;\n    font-size: 20px;\n    font-weight: 700;\n    letter-spacing: '.3rem';\n    text-align: center;\n    margin-top: 30px;\n    @media screen and (min-width: 481px) {\n        font-size: 24px;\n        margin-top: 20px;\n    }\n`","import { Button } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerFetch } from 'redux/AuthOperations';\nimport { selectErrorReg } from 'redux/AuthSelectors';\nimport { Form, Input } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const error = useSelector(selectErrorReg);\n  const dispatch = useDispatch();\n  const { register, handleSubmit, resetField } = useForm();\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    dispatch(\n      registerFetch({\n        name: data.name,\n        email: data.email,\n        password: data.password,\n      })\n    );\n    resetField('name', 'email', 'password');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      {error ? (\n        <Input\n          error\n          required\n          id=\"outlined-error\"\n          label=\"Name\"\n          type=\"text\"\n          {...register('name', { required: true, maxLength: 20 })}\n        />\n      ) : (\n        <Input\n          required\n          id=\"outlined-required\"\n          label=\"Name\"\n          type=\"text\"\n          {...register('name', { required: true, maxLength: 20 })}\n        />\n      )}\n\n      {error ? (\n        <Input\n          error\n          width=\"280\"\n          required\n          id=\"outlined-error\"\n          label=\"Email\"\n          type=\"email\"\n          {...register('email', { required: true, maxLength: 50 })}\n        />\n      ) : (\n        <Input\n          required\n          width=\"280\"\n          id=\"outlined-required\"\n          label=\"Email\"\n          type=\"email\"\n          {...register('email', { required: true, maxLength: 50 })}\n        />\n      )}\n      {error ? (\n        <Input\n          error\n          required\n          id=\"outlined-error\"\n          label=\"Email\"\n          type=\"Password\"\n          {...register('password', { required: true, maxLength: 50 })}\n          helperText=\"A user with that email address already exists\"\n        />\n      ) : (\n        <Input\n          required\n          id=\"outlined-required\"\n          label=\"Password\"\n          type=\"password\"\n          {...register('password', { required: true, maxLength: 50 })}\n        />\n      )}\n\n      <Button variant=\"contained\" type=\"submit\">\n        Register\n      </Button>\n    </Form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { TitleReg } from 'components/RegisterForm/RegisterForm.styled';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\n\nconst Register = () => {\n    return (\n        <HelmetProvider>\n            <div>\n                <Helmet>\n                    <title>Registration</title>\n                </Helmet>\n                <TitleReg>Please enter your data to sign up</TitleReg>\n                <RegisterForm />\n            </div>\n        </HelmetProvider>\n    );\n};\n\nexport default Register;"],"names":["Form","styled","Input","TextField","TitleReg","RegisterForm","error","useSelector","selectErrorReg","dispatch","useDispatch","useForm","register","handleSubmit","resetField","onSubmit","data","e","preventDefault","registerFetch","name","email","password","required","id","label","type","maxLength","width","helperText","Button","variant"],"sourceRoot":""}